[{"E:\\code\\Projects\\medic-app\\src\\components\\calendar\\helpers\\index.js":"1","E:\\code\\Projects\\medic-app\\src\\components\\calendar\\Calendar.js":"2","E:\\code\\Projects\\medic-app\\src\\components\\calendar\\formTask\\FormTask.js":"3","E:\\code\\Projects\\medic-app\\src\\components\\calendar\\views\\Days.js":"4","E:\\code\\Projects\\medic-app\\src\\components\\calendar\\views\\Month.js":"5","E:\\code\\Projects\\medic-app\\src\\components\\main\\Main.js":"6"},{"size":4364,"mtime":1608687201356,"results":"7","hashOfConfig":"8"},{"size":4597,"mtime":1608686800615,"results":"9","hashOfConfig":"8"},{"size":1587,"mtime":1608504428445,"results":"10","hashOfConfig":"8"},{"size":826,"mtime":1608600991437,"results":"11","hashOfConfig":"8"},{"size":1332,"mtime":1608685449867,"results":"12","hashOfConfig":"8"},{"size":614,"mtime":1608689734190,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18ct9ow",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\code\\Projects\\medic-app\\src\\components\\calendar\\helpers\\index.js",["28","29","30"],"E:\\code\\Projects\\medic-app\\src\\components\\calendar\\Calendar.js",["31","32"],"E:\\code\\Projects\\medic-app\\src\\components\\calendar\\formTask\\FormTask.js",["33"],"import React, { useEffect, useState } from 'react'\r\nimport { daysName, daysOfMont } from '../helpers'\r\n\r\nexport const FormTask = ({ state }) => {\r\n\r\n    const [task, setTask] = useState({\r\n        date: '',\r\n        title:''\r\n    })\r\n\r\n    useEffect(() => {\r\n        handleTask({\r\n            target:{\r\n                name:'date',\r\n                value:`${state.year}-${state.month + 1}-${state.day}`\r\n            }\r\n        })\r\n        \r\n    }, [task.title])\r\n\r\n    const handleTask = ({target})=>{\r\n        setTask({\r\n            ...task,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleSave = ()=>{\r\n        localStorage.setItem('task', JSON.stringify(task))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                {\r\n                    `${daysName(new Date(\r\n                        state.year,\r\n                        state.month,\r\n                        state.day\r\n                    ).getDay())} ${state.day} de ${daysOfMont(state.month).name} de ${state.year}`\r\n                }\r\n            </h1>\r\n            <label>Input</label>\r\n            <input\r\n                type=\"text\"\r\n                readOnly={true}\r\n                value={`${state.year}-${state.month + 1}-${state.day}`}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={task.title}\r\n                onChange={handleTask}\r\n            />\r\n\r\n            <button\r\n                onClick={handleSave}\r\n            >\r\n                Guardar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n",["34","35"],"E:\\code\\Projects\\medic-app\\src\\components\\calendar\\views\\Days.js",["36","37"],"E:\\code\\Projects\\medic-app\\src\\components\\calendar\\views\\Month.js",[],"E:\\code\\Projects\\medic-app\\src\\components\\main\\Main.js",[],{"ruleId":"38","severity":1,"message":"39","line":73,"column":17,"nodeType":"40","messageId":"41","endLine":73,"endColumn":19},{"ruleId":"38","severity":1,"message":"39","line":73,"column":36,"nodeType":"40","messageId":"41","endLine":73,"endColumn":38},{"ruleId":"38","severity":1,"message":"39","line":73,"column":61,"nodeType":"40","messageId":"41","endLine":73,"endColumn":63},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":19,"column":8,"nodeType":"49","endLine":19,"endColumn":20,"suggestions":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"42","severity":1,"message":"55","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"56","line":2,"column":19,"nodeType":"44","messageId":"45","endLine":2,"endColumn":29},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FormTask' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleTask', 'state.day', 'state.month', and 'state.year'. Either include them or remove the dependency array.","ArrayExpression",["57"],"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"'useState' is defined but never used.","'daysOfMont' is defined but never used.",{"desc":"60","fix":"61"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [handleTask, state.day, state.month, state.year, task.title]",{"range":"62","text":"63"},[448,460],"[handleTask, state.day, state.month, state.year, task.title]"]